<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnQuery.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QmCC
</value>
  </data>
  <data name="btnExcel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAAclJREFUWEfd188rpVEcx/GLhaEoGRJ28jNNVhMKsUBWVlZSSs1fMEWiZjGL2VgY
        dtZI2FhJCitKYcvKhpIZQo2G8P5c91un051Mec5TfOqVe86t8/3e5znPD4n3kEJ0oTo5ijmtuMRjyjfE
        mgNYcVOF2HINv4FOxJZluMUvoD0RW4qwhCvodLQg1uSjA+XJUUzJQDtm8Qd2+McQNHkYxhHc8+5qRLBs
        Il1R1xyCpA1W5De2nLHrDmWIPAuwIpUYcca+74g0pdAv0+IbmiC69PzCf1N/z6HLMRORRBvPivRrghzD
        5kRXw4Q3d4IpNOBV+QItqKIfUJwau7bxEfvOnLnFJ7wqeuqpsNIDv8g0FB12bVj98lPoO52aekSWcfgN
        DMKPmmlGTXIUYVbgNzCDbMQSbS4V1QPIbWIPwd+KdJOxgj+h/XDmzN2gD8HSCys2oAlSglXYvI5MsPyA
        FarVRCp6Qq7DvguSJuiaVoFf8O90iwjWgF447LqWIfgJ1kAOdmGLTyJdgjUwD1t4DVlIlyANjMIWPUQB
        /pXIG6jAA7Sg/vt56SYTeQMqeA+9C3Rr4oV8hYrvJEcRRQ+SuueP/5XPyH3++CaSSDwBxcS6csiuukQA
        AAAASUVORK5CYII=
</value>
  </data>
  <metadata name="statusStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="saveFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>154, 17</value>
  </metadata>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAQAAEABADoAgAAFgAAACgAAAAgAAAAQAAAAAEABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAACAAACAAAAAgIAAgAAAAIAAgACAgAAAwMDAAICAgAAAAP8AAP8AAAD//wD/AAAA/wD/AP//
        AAD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAu7GIiIiIiAAAsAAAAAAACzEYiIiIh3eIiACwAAAAAAu7GI
        h4iIh3d3iIAAAAAIiBuwd3iIh3d3d3eIgAAAiIgROwAAiIcAB3d3eIgACIiIcbuwAIiHAAAAAHeIAAiH
        cAAROwCIhwAAAAsAeIAIiAAAG7sQiIcAAACxOwiACIiAAAGxAIiHAAABu7CIgAiHAAABEACIgAALs7sI
        iHAIcAAAAAAAAAuxuzuxAAhwAHAAAAAAuxsbO7sREAAIAAAAAAALsbs7OzERAAAAAAAAAAAAG7O7sREQ
        AAAAAAAAAAAACzuxERiHAAAAAAAAAAAAABuzEACIhwAAAAAAAAAAAAE7sQAAiIcAAAAAAAAAAAALsxAA
        AIiHAAAAAAAAAAAAEbEAAACIhwAAAAAAAAAAAAsxAAAAiHcAAAAAAAAAAIiAAAAAAIhwAAAAAAiIAACI
        d3d3d3CIB3d3d3d4hwAAh3AAAAAAiHAAAAAACHcAAAADsAAAAIiHAAAAAAAAAAAAGxAAAAiHd3AAAAAA
        AAAAABu7AACHcAh3AAAAAAAAAAABOwAAcRAAhwAAAAAAAAAAAbGwABuxAIcAAAAAAAAAAAAbuxCxsQiH
        AAAAAAAAAAAAARO7uxd3cAAAAAAAAAAAAAABEREAAAAAAAAAAAD+AAA//AAAD/gAAAfgAAAHwAAAA4AA
        AAEACBgAAQAfAAcAHgADiBgAB5gAAA/wACCPgABx3wAD+/4AH//8AB//+Bgf//g4H//weB//8Pgf/8D4
        H+OAAAABgAAAAYAAAAHA+B/j8PAP//BgB//4YYf/+ACH//wAB//+AA///4Af/w==
</value>
  </data>
</root>