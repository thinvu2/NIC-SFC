<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio\2019\enterprise\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="16.0">
 <Namespaces>
  <Namespace Name="MES.OpINI">
   <Messages>
    <Message Id="INI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'INI' in namespace name 'MES.OpINI' by changing it to 'Ini'.</Issue>
    </Message>
    <Message Id="MES" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'MES' in namespace name 'MES.OpINI' by changing it to 'Mes'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="REPAIR">
   <Messages>
    <Message Id="REPAIR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'REPAIR' in namespace name 'REPAIR' by changing it to 'Repair'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="REPAIR.Models">
   <Messages>
    <Message Id="REPAIR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'REPAIR' in namespace name 'REPAIR.Models' by changing it to 'Repair'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="REPAIR.UserControlRepair">
   <Messages>
    <Message Id="REPAIR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'REPAIR' in namespace name 'REPAIR.UserControlRepair' by changing it to 'Repair'.</Issue>
    </Message>
   </Messages>
  </Namespace>
  <Namespace Name="REPAIR.ViewModel">
   <Messages>
    <Message Id="REPAIR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
     <Issue Name="Namespace" Certainty="85" Level="Error">Correct the casing of 'REPAIR' in namespace name 'REPAIR.ViewModel' by changing it to 'Repair'.</Issue>
    </Message>
   </Messages>
  </Namespace>
 </Namespaces>
 <Targets>
  <Target Name="E:\5.0\NIC_SFC\PD\Repair\REPAIR\bin\Debug\REPAIR.exe">
   <Modules>
    <Module Name="repair.exe">
     <Messages>
      <Message TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
       <Issue Name="NoStrongName" Certainty="95" Level="CriticalError">Sign 'REPAIR.exe' with a strong name key.</Issue>
      </Message>
      <Message Id="REPAIR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
       <Issue Name="Assembly" Certainty="85" Level="Error">Correct the casing of 'REPAIR' in assembly name 'REPAIR.exe' by changing it to 'Repair'.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Error">Mark 'REPAIR.exe' with CLSCompliant(true) because it exposes externally visible types.</Issue>
      </Message>
      <Message TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
       <Issue Certainty="95" Level="Warning">Because assembly 'REPAIR.exe' contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Issue>
      </Message>
     </Messages>
     <Namespaces>
      <Namespace Name="MES.OpINI">
       <Types>
        <Type Name="IniUtil" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Ini" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ini' in type name 'IniUtil'.</Issue>
          </Message>
          <Message Id="Util" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Util' in type name 'IniUtil'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#CharSubb()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Subb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Subb' in member name 'IniUtil.CharSubb()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPrivateProfileString(System.String,System.String,System.String,System.Text.StringBuilder,System.Int32,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'IniUtil.GetPrivateProfileString(string, string, string, StringBuilder, int, string)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'section' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'key' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="2" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'def' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="3" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'retVal' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="5" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'filePath' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ProclaimText(System.String)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="170">Modify 'IniUtil.ProclaimText(string)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="158">The 'this' parameter (or 'Me' in Visual Basic) of 'IniUtil.ProclaimText(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="165">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'IniUtil.ProclaimText(string)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadINI(System.String,System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="124">Correct the casing of 'INI' in member name 'IniUtil.ReadINI(string, string, string, bool)' by changing it to 'Ini'.</Issue>
            </Message>
            <Message Id="ini" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="124">In method 'IniUtil.ReadINI(string, string, string, bool)', correct the spelling of 'ini' in parameter name 'iniFileName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="i" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="127">'IniUtil.ReadINI(string, string, string, bool)' declares a variable, 'i', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadINI(System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="46">Correct the casing of 'INI' in member name 'IniUtil.ReadINI(string, string, string, string)' by changing it to 'Ini'.</Issue>
            </Message>
            <Message Id="ini" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="46">In method 'IniUtil.ReadINI(string, string, string, string)', correct the spelling of 'ini' in parameter name 'iniFileName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="46">In member 'IniUtil.ReadINI(string, string, string, string)', remove the underscores from parameter name '_default'.</Issue>
            </Message>
            <Message Id="i" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="50">'IniUtil.ReadINI(string, string, string, string)' declares a variable, 'i', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="60">'IniUtil.ReadINI(string, string, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="51">Replace the call to 'string.operator ==(string, string)' in 'IniUtil.ReadINI(string, string, string, string)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadINI_B(System.String,System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="67">Correct the casing of 'INI' in member name 'IniUtil.ReadINI_B(string, string, string, bool)' by changing it to 'Ini'.</Issue>
            </Message>
            <Message Id="ini" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="67">In method 'IniUtil.ReadINI_B(string, string, string, bool)', correct the spelling of 'ini' in parameter name 'iniFileName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="67">Remove the underscores from member name 'IniUtil.ReadINI_B(string, string, string, bool)'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="67">In member 'IniUtil.ReadINI_B(string, string, string, bool)', remove the underscores from parameter name '_default'.</Issue>
            </Message>
            <Message Id="i" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="71">'IniUtil.ReadINI_B(string, string, string, bool)' declares a variable, 'i', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="88">'IniUtil.ReadINI_B(string, string, string, bool)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="78">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'IniUtil.ReadINI_B(string, string, string, bool)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="72">Replace the call to 'string.operator ==(string, string)' in 'IniUtil.ReadINI_B(string, string, string, bool)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReadINI_Int(System.String,System.String,System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="95">Correct the casing of 'INI' in member name 'IniUtil.ReadINI_Int(string, string, string, int)' by changing it to 'Ini'.</Issue>
            </Message>
            <Message Id="ini" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="95">In method 'IniUtil.ReadINI_Int(string, string, string, int)', correct the spelling of 'ini' in parameter name 'iniFileName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="int" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="LanguageSpecificMember" Certainty="75" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="95">Consider replacing the language-specific data type identifier 'Int' in member name 'IniUtil.ReadINI_Int(string, string, string, int)' with either a language-independent equivalent or a more generic term, such as 'value'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="95">Remove the underscores from member name 'IniUtil.ReadINI_Int(string, string, string, int)'.</Issue>
             <Issue Name="MemberParameter" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="95">In member 'IniUtil.ReadINI_Int(string, string, string, int)', remove the underscores from parameter name '_default'.</Issue>
            </Message>
            <Message Id="i" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="99">'IniUtil.ReadINI_Int(string, string, string, int)' declares a variable, 'i', of type 'int', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="109">'IniUtil.ReadINI_Int(string, string, string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
            <Message Id="System.Convert.ToInt32(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="106">Because the behavior of 'Convert.ToInt32(string)' could vary based on the current user's locale settings, replace this call in 'IniUtil.ReadINI_Int(string, string, string, int)' with a call to 'Convert.ToInt32(string, IFormatProvider)'. If the result of 'Convert.ToInt32(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="100">Replace the call to 'string.operator ==(string, string)' in 'IniUtil.ReadINI_Int(string, string, string, int)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'IniUtil.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'IniUtil.sfcHttpClient' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteINI(System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="INI" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="148">Correct the casing of 'INI' in member name 'IniUtil.WriteINI(string, string, string, string)' by changing it to 'Ini'.</Issue>
            </Message>
            <Message Id="ini" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="148">In method 'IniUtil.WriteINI(string, string, string, string)', correct the spelling of 'ini' in parameter name 'iniFileName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WriteLog(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Log" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="177">In member 'IniUtil.WriteLog(string)', correct the casing of 'Log' in parameter name 'Log' by changing it to 'log'.</Issue>
            </Message>
            <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="179">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'IniUtil.WriteLog(string)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="196">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'IniUtil.WriteLog(string)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
             <Issue Name="IFormatProviderAlternateString" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="OperateIni.cs" Line="203">Because the behavior of 'DateTime.ToString(string)' could vary based on the current user's locale settings, replace this call in 'IniUtil.WriteLog(string)' with a call to 'DateTime.ToString(string, IFormatProvider)'. If the result of 'DateTime.ToString(string, IFormatProvider)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WritePrivateProfileString(System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'IniUtil.WritePrivateProfileString(string, string, string, string)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
            <Message Id="return" TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'IniUtil.WritePrivateProfileString(string, string, string, string)' will be 8 bytes wide on 32-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 4 bytes wide on 32-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'long'.</Issue>
             <Issue Name="Return" Certainty="95" Level="Error">As it is declared in your code, the return type of P/Invoke 'IniUtil.WritePrivateProfileString(string, string, string, string)' will be 8 bytes wide on 64-bit platforms. This is not correct, as the actual native declaration of this API indicates it should be 4 bytes wide on 64-bit platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of 'long'.</Issue>
            </Message>
            <Message Id="0" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'section' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="1" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'key' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="2" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'val' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
            <Message Id="3" TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="ParameterImplicitAnsi" Certainty="75" Level="Error">To reduce security risk, marshal parameter 'filePath' as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="REPAIR">
       <Types>
        <Type Name="ChangeKP" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#dgr_AutoGeneratingColumn(System.Object,System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="ChangeKP.xaml.cs" Line="89">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ChangeKP.dgr_AutoGeneratingColumn(object, DataGridAutoGeneratingColumnEventArgs)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ChangeKP.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'ChangeKP.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sqlstr" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ChangeKP.sqlstr' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sqlstr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sqlstr' in member name 'ChangeKP.sqlstr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Database" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Sfc.Library.HttpClient.SfcHttpClient)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\RepositoryService" File="Database.cs" Line="14">In method 'Database.Database(SfcHttpClient)', correct the spelling of 'sfc' in parameter name 'sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#_sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="25" Level="Error">Remove the read-only designation from 'Database._sfcHttpClient' or change the field to one that is an immutable reference type. If the reference type 'SfcHttpClient' is, in fact, immutable, exclude this message.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Database._sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'Database._sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteNoneQuery(System.String,System.Collections.Generic.IEnumerable`1&lt;Sfc.Core.Parameters.SfcParameter&gt;,Sfc.Core.Parameters.SfcCommandType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'Database.ExecuteNoneQuery(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Sfc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Database.ExecuteNoneQuery(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)', correct the casing of 'Sfc' in parameter name 'SfcParameters' by changing it to 'sfc'.</Issue>
            </Message>
            <Message Id="Sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Database.ExecuteNoneQuery(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)', correct the spelling of 'Sfc' in parameter name 'SfcParameters' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetList(System.String,System.Collections.Generic.IEnumerable`1&lt;Sfc.Core.Parameters.SfcParameter&gt;,Sfc.Core.Parameters.SfcCommandType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'Database.GetList(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'Database.GetList(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)' doesn't nest generic type 'Task&lt;IEnumerable&lt;IDictionary&lt;string, object&gt;&gt;&gt;'.</Issue>
            </Message>
            <Message Id="Sfc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Database.GetList(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)', correct the casing of 'Sfc' in parameter name 'SfcParameters' by changing it to 'sfc'.</Issue>
            </Message>
            <Message Id="Sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Database.GetList(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)', correct the spelling of 'Sfc' in parameter name 'SfcParameters' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObject(System.String,System.Collections.Generic.IEnumerable`1&lt;Sfc.Core.Parameters.SfcParameter&gt;,Sfc.Core.Parameters.SfcCommandType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'Database.GetObject(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'Database.GetObject(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)' doesn't nest generic type 'Task&lt;IDictionary&lt;string, object&gt;&gt;'.</Issue>
            </Message>
            <Message Id="Sfc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Database.GetObject(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)', correct the casing of 'Sfc' in parameter name 'SfcParameters' by changing it to 'sfc'.</Issue>
            </Message>
            <Message Id="Sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Database.GetObject(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)', correct the spelling of 'Sfc' in parameter name 'SfcParameters' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="formAddError" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="form" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'form' in type name 'formAddError' by changing it to 'Form'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#dgr_AutoGeneratingColumn(System.Object,System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formAddError.xaml.cs" Line="126">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'formAddError.dgr_AutoGeneratingColumn(object, DataGridAutoGeneratingColumnEventArgs)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FLAG" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formAddError.FLAG' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="FLAG" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'FLAG' in member name 'formAddError.FLAG' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MODEL_NAME" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formAddError.MODEL_NAME' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formAddError.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'formAddError.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formAddError.SN' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sqlstr" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formAddError.sqlstr' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sqlstr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sqlstr' in member name 'formAddError.sqlstr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="formReasonCode" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="form" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'form' in type name 'formReasonCode' by changing it to 'Form'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#btnOK_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formReasonCode.xaml.cs" Line="98">'formReasonCode.btnOK_Click(object, RoutedEventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dgr_AutoGeneratingColumn(System.Object,System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formReasonCode.xaml.cs" Line="94">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'formReasonCode.dgr_AutoGeneratingColumn(object, DataGridAutoGeneratingColumnEventArgs)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FLAG" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReasonCode.FLAG' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="FLAG" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'FLAG' in member name 'formReasonCode.FLAG' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MODEL_NAME" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReasonCode.MODEL_NAME' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReasonCode.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'formReasonCode.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReasonCode.SN' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sqlstr" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReasonCode.sqlstr' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sqlstr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sqlstr' in member name 'formReasonCode.sqlstr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="formReport" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="form" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'form' in type name 'formReport' by changing it to 'Form'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#ALLFlag" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReport.ALLFlag' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flag' in member name 'formReport.ALLFlag' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#btnQuery_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formReport.xaml.cs" Line="83">Method 'formReport.btnQuery_Click(object, RoutedEventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButton, MessageBoxImage)'. Retrieve the following string(s) from a resource table instead: "Error".</Issue>
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formReport.xaml.cs" Line="102">Method 'formReport.btnQuery_Click(object, RoutedEventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButton, MessageBoxImage)'. Retrieve the following string(s) from a resource table instead: "Error".</Issue>
            </Message>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formReport.xaml.cs" Line="88">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'formReport.btnQuery_Click(object, RoutedEventArgs)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formReport.xaml.cs" Line="128">Replace the call to 'string.operator !=(string, string)' in 'formReport.btnQuery_Click(object, RoutedEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formReport.xaml.cs" Line="81">Replace the call to 'string.operator ==(string, string)' in 'formReport.btnQuery_Click(object, RoutedEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formReport.xaml.cs" Line="100">Replace the call to 'string.operator ==(string, string)' in 'formReport.btnQuery_Click(object, RoutedEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dtTable" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'formReport.dtTable' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#filename" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeCompoundWord" Certainty="80" Level="Error">The discrete term 'filename' in member name 'formReport.filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReport.filename' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getModelName(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formReport.xaml.cs" Line="138">Correct the casing of 'get' in member name 'formReport.getModelName(string)' by changing it to 'Get'.</Issue>
            </Message>
            <Message Id="str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formReport.xaml.cs" Line="138">In method 'formReport.getModelName(string)', correct the spelling of 'str' in parameter name 'strModel' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formReport.xaml.cs" Line="138">The 'this' parameter (or 'Me' in Visual Basic) of 'formReport.getModelName(string)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
            <Message Id="0" TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="formReport.xaml.cs" Line="139">In externally visible method 'formReport.getModelName(string)', validate parameter 'strModel' before using it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#listTimeEnd" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReport.listTimeEnd' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#listTimeStart" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReport.listTimeStart' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MODEL_NAME" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReport.MODEL_NAME' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReport.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'formReport.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReport.SN' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sqlstr" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReport.sqlstr' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sqlstr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sqlstr' in member name 'formReport.sqlstr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#strsql1" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReport.strsql1' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="strsql" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'strsql' in member name 'formReport.strsql1' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#strsql2" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'formReport.strsql2' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="strsql" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'strsql' in member name 'formReport.strsql2' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmCheckEmp" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="frm" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'frm' in type name 'frmCheckEmp' by changing it to 'Frm'.</Issue>
          </Message>
          <Message Id="Emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Emp' in type name 'frmCheckEmp'.</Issue>
          </Message>
          <Message Id="frm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'frm' in type name 'frmCheckEmp'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#btnOK_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="frmCheckEmp.xaml.cs" Line="132">Replace the call to 'string.operator !=(string, string)' in 'frmCheckEmp.btnOK_Click(object, RoutedEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#empNoIpqc" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckEmp.empNoIpqc' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Ipqc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ipqc' in member name 'frmCheckEmp.empNoIpqc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'emp' in member name 'frmCheckEmp.empNoIpqc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#login()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="login" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'login' in member name 'frmCheckEmp.login()' by changing it to 'Login'.</Issue>
            </Message>
            <Message Id="login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'login' in member name 'frmCheckEmp.login()' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PasswordBox_Keydown(System.Object,System.Windows.Input.KeyEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="frmCheckEmp.xaml.cs" Line="46">Replace the call to 'string.operator !=(string, string)' in 'frmCheckEmp.PasswordBox_Keydown(object, KeyEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RESArray" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckEmp.RESArray' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#returnCheck" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckEmp.returnCheck' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckEmp.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'frmCheckEmp.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmCheckInOut" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="frm" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'frm' in type name 'frmCheckInOut' by changing it to 'Frm'.</Issue>
          </Message>
          <Message Id="frm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'frm' in type name 'frmCheckInOut'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#C_Emp_No" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckInOut.C_Emp_No' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Emp' in member name 'frmCheckInOut.C_Emp_No' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Check_PRIVILEGE(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Emp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'frmCheckInOut.Check_PRIVILEGE(string)', correct the casing of 'Emp' in parameter name 'EmpNo' by changing it to 'emp'.</Issue>
            </Message>
            <Message Id="PRIVILEGE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'PRIVILEGE' in member name 'frmCheckInOut.Check_PRIVILEGE(string)' by changing it to 'Privilege'.</Issue>
            </Message>
            <Message Id="Emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'frmCheckInOut.Check_PRIVILEGE(string)', correct the spelling of 'Emp' in parameter name 'EmpNo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'frmCheckInOut.Check_PRIVILEGE(string)'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkPrivilege(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Emp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'frmCheckInOut.checkPrivilege(string, string)', correct the casing of 'Emp' in parameter name 'EmpPass' by changing it to 'emp'.</Issue>
            </Message>
            <Message Id="Funtion" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'frmCheckInOut.checkPrivilege(string, string)', correct the casing of 'Funtion' in parameter name 'FuntionCheck' by changing it to 'funtion'.</Issue>
            </Message>
            <Message Id="check" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'check' in member name 'frmCheckInOut.checkPrivilege(string, string)' by changing it to 'Check'.</Issue>
            </Message>
            <Message Id="Emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'frmCheckInOut.checkPrivilege(string, string)', correct the spelling of 'Emp' in parameter name 'EmpPass' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Funtion" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'frmCheckInOut.checkPrivilege(string, string)', correct the spelling of 'Funtion' in parameter name 'FuntionCheck' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkRepairbySN(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DATA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'frmCheckInOut.checkRepairbySN(string)', correct the casing of 'DATA' in parameter name 'DATA' by changing it to 'data'.</Issue>
            </Message>
            <Message Id="check" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'check' in member name 'frmCheckInOut.checkRepairbySN(string)' by changing it to 'Check'.</Issue>
            </Message>
            <Message Id="Repairby" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Repairby' in member name 'frmCheckInOut.checkRepairbySN(string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dtTable" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'frmCheckInOut.dtTable' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FLAG" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckInOut.FLAG' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="FLAG" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'FLAG' in member name 'frmCheckInOut.FLAG' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#itemCheckIn_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Controls.TextBlock.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="frmCheckInOut.xaml.cs" Line="126">Method 'frmCheckInOut.itemCheckIn_Click(object, RoutedEventArgs)' passes a literal string as parameter 'value' of a call to 'TextBlock.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CHECK IN".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#itemCheckOut_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Controls.TextBlock.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="frmCheckInOut.xaml.cs" Line="113">Method 'frmCheckInOut.itemCheckOut_Click(object, RoutedEventArgs)' passes a literal string as parameter 'value' of a call to 'TextBlock.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CHECK OUT".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MODEL_NAME" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckInOut.MODEL_NAME' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PDempNo" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckInOut.PDempNo' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Demp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Demp' in member name 'frmCheckInOut.PDempNo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#REempNo" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckInOut.REempNo' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Eemp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Eemp' in member name 'frmCheckInOut.REempNo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RESArray" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckInOut.RESArray' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckInOut.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'frmCheckInOut.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckInOut.SN' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sqlstr" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmCheckInOut.sqlstr' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sqlstr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sqlstr' in member name 'frmCheckInOut.sqlstr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmInputData" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="frm" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'frm' in type name 'frmInputData' by changing it to 'Frm'.</Issue>
          </Message>
          <Message Id="frm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'frm' in type name 'frmInputData'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#btnOK_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="frmInputData.xaml.cs" Line="36">Method 'frmInputData.btnOK_Click(object, RoutedEventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButton, MessageBoxImage)'. Retrieve the following string(s) from a resource table instead: "Error".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#frmMain" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'frmInputData.frmMain' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmInputReason" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="frm" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'frm' in type name 'frmInputReason' by changing it to 'Frm'.</Issue>
          </Message>
          <Message Id="frm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'frm' in type name 'frmInputReason'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#btnOK_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="frmInputReason.xaml.cs" Line="33">Method 'frmInputReason.btnOK_Click(object, RoutedEventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButton, MessageBoxImage)'. Retrieve the following string(s) from a resource table instead: "Error".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#frmMain" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'frmInputReason.frmMain' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tbInputData_Keydown(System.Object,System.Windows.Input.KeyEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="frmInputReason.xaml.cs" Line="57">'frmInputReason.tbInputData_Keydown(object, KeyEventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmModify" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="frm" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'frm' in type name 'frmModify' by changing it to 'Frm'.</Issue>
          </Message>
          <Message Id="frm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'frm' in type name 'frmModify'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#checkReasonCode(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="check" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'check' in member name 'frmModify.checkReasonCode(string)' by changing it to 'Check'.</Issue>
            </Message>
            <Message Id="reasoncode" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'frmModify.checkReasonCode(string)', correct the spelling of 'reasoncode' in parameter name 'reasoncode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ChkbtypeDCLC_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="empppp" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="frmModify.xaml.cs" Line="254">'frmModify.ChkbtypeDCLC_Click(object, RoutedEventArgs)' declares a variable, 'empppp', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dgr_AutoGeneratingColumn(System.Object,System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="frmModify.xaml.cs" Line="504">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'frmModify.dgr_AutoGeneratingColumn(object, DataGridAutoGeneratingColumnEventArgs)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#F_ROWID" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.F_ROWID' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FLAG" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.FLAG' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="FLAG" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'FLAG' in member name 'frmModify.FLAG' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getAllpartInfor(System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DATA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'frmModify.getAllpartInfor(string, string, string)', correct the casing of 'DATA' in parameter name 'DATA1' by changing it to 'data'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'frmModify.getAllpartInfor(string, string, string)', correct the casing of 'DATA' in parameter name 'DATA2' by changing it to 'data'.</Issue>
            </Message>
            <Message Id="SN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'frmModify.getAllpartInfor(string, string, string)', correct the casing of 'SN' in parameter name 'SN' by changing it to 'sn'.</Issue>
            </Message>
            <Message Id="get" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'get' in member name 'frmModify.getAllpartInfor(string, string, string)' by changing it to 'Get'.</Issue>
            </Message>
            <Message Id="Allpart" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Allpart' in member name 'frmModify.getAllpartInfor(string, string, string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Infor" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Infor' in member name 'frmModify.getAllpartInfor(string, string, string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="SN" TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Parameter" Certainty="95" Level="Error">'SN', a parameter declared in 'frmModify.getAllpartInfor(string, string, string)', has the same name as an instance field on the type. Change the name of one of these items.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ItemCode" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'frmModify.ItemCode' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lbGroup" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.lbGroup' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="lb" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'lb' in member name 'frmModify.lbGroup' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LINE_NAME" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.LINE_NAME' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Location_Keydown()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Keydown" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Keydown' in member name 'frmModify.Location_Keydown()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Remove the underscores from member name 'frmModify.Location_Keydown()'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#M_iFlag" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.M_iFlag' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flag' in member name 'frmModify.M_iFlag' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MODEL_NAME" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.MODEL_NAME' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReasonCode" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'frmModify.ReasonCode' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReasonDesc" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Desc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Desc' in member name 'frmModify.ReasonDesc' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'frmModify.ReasonDesc' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#REPAIR_GROUP" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.REPAIR_GROUP' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RESArray" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.RESArray' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SECTION" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.SECTION' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'frmModify.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.SN' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sqlstr" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.sqlstr' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sqlstr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sqlstr' in member name 'frmModify.sqlstr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sRepairType" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.sRepairType' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#tReasonCode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="tReason" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'tReason' in member name 'frmModify.tReasonCode' exists as a discrete term. If your usage is intended to be single word, case it as 'treason' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmModify.tReasonCode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmSelectGroupNext" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="frm" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'frm' in type name 'frmSelectGroupNext' by changing it to 'Frm'.</Issue>
          </Message>
          <Message Id="frm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'frm' in type name 'frmSelectGroupNext'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#btnOK_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="frmSelectGroupNext.xaml.cs" Line="42">Method 'frmSelectGroupNext.btnOK_Click(object, RoutedEventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButton, MessageBoxImage)'. Retrieve the following string(s) from a resource table instead: "Error".</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="frmSelectGroupNext.xaml.cs" Line="40">Replace the call to 'string.operator ==(string, string)' in 'frmSelectGroupNext.btnOK_Click(object, RoutedEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#C_Not_Group" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmSelectGroupNext.C_Not_Group' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#C_SN" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmSelectGroupNext.C_SN' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#frmMain" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'frmSelectGroupNext.frmMain' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#group" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmSelectGroupNext.group' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RESArray" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmSelectGroupNext.RESArray' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#route" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmSelectGroupNext.route' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmSelectGroupNext.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'frmSelectGroupNext.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="frmUpdateStatus" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="frm" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'frm' in type name 'frmUpdateStatus' by changing it to 'Frm'.</Issue>
          </Message>
          <Message Id="frm" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'frm' in type name 'frmUpdateStatus'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#btnFile_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="filename" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="frmUpdateStatus.xaml.cs" Line="130">'frmUpdateStatus.btnFile_Click(object, RoutedEventArgs)' declares a variable, 'filename', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#charSub" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmUpdateStatus.charSub' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RESArray" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmUpdateStatus.RESArray' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmUpdateStatus.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'frmUpdateStatus.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#strSql" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'frmUpdateStatus.strSql' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'str' in member name 'frmUpdateStatus.strSql' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ItemCode" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#dgr_AutoGeneratingColumn(System.Object,System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="ItemCode.xaml.cs" Line="89">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'ItemCode.dgr_AutoGeneratingColumn(object, DataGridAutoGeneratingColumnEventArgs)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ItemCode.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'ItemCode.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sqlstr" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'ItemCode.sqlstr' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sqlstr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sqlstr' in member name 'ItemCode.sqlstr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Login" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Replace the term 'Login' in type name 'Login' with the preferred alternate 'LogOn'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#btnOK_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="Login.xaml.cs" Line="50">Replace the call to 'string.operator !=(string, string)' in 'Login.btnOK_Click(object, RoutedEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#login()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="login" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'login' in member name 'Login.login()' by changing it to 'Login'.</Issue>
            </Message>
            <Message Id="login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'login' in member name 'Login.login()' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PasswordBox_Keydown(System.Object,System.Windows.Input.KeyEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="Login.xaml.cs" Line="42">Replace the call to 'string.operator !=(string, string)' in 'Login.PasswordBox_Keydown(object, KeyEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RESArray" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Login.RESArray' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'Login.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'Login.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainWindow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="90" Level="Error">'MainWindow' is coupled with 102 different types from 26 different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above 95 indicates poor maintainability, a class coupling between 95 and 80 indicates moderate maintainability, and a class coupling below 80 indicates good maintainability.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#.ctor()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="51">In method 'MainWindow.MainWindow()', call System.IDisposable.Dispose on object '_timer' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#appVer" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Ver" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Ver' in member name 'MainWindow.appVer' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.appVer' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#baseUrl" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.baseUrl' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkDataSN(System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'MainWindow.checkDataSN(string)', correct the casing of 'SN' in parameter name 'SN' by changing it to 'sn'.</Issue>
            </Message>
            <Message Id="check" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'check' in member name 'MainWindow.checkDataSN(string)' by changing it to 'Check'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckLogin" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.CheckLogin' non-public or a constant.</Issue>
            </Message>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'MainWindow.CheckLogin' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkPrivilege(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Emp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'MainWindow.checkPrivilege(string, string)', correct the casing of 'Emp' in parameter name 'EmpPass' by changing it to 'emp'.</Issue>
            </Message>
            <Message Id="Funtion" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'MainWindow.checkPrivilege(string, string)', correct the casing of 'Funtion' in parameter name 'FuntionCheck' by changing it to 'funtion'.</Issue>
            </Message>
            <Message Id="check" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'check' in member name 'MainWindow.checkPrivilege(string, string)' by changing it to 'Check'.</Issue>
            </Message>
            <Message Id="Emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'MainWindow.checkPrivilege(string, string)', correct the spelling of 'Emp' in parameter name 'EmpPass' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="Funtion" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'MainWindow.checkPrivilege(string, string)', correct the spelling of 'Funtion' in parameter name 'FuntionCheck' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#CheckRepairData()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="90" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="1253">'MainWindow.CheckRepairData()' has a cyclomatic complexity of 29. Rewrite or refactor the method to reduce complexity to 25.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="1361">Modify 'MainWindow.CheckRepairData()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="System.DateTime.Parse(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IFormatProviderAlternate" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="1265">Because the behavior of 'DateTime.Parse(string)' could vary based on the current user's locale settings, replace this call in 'MainWindow.CheckRepairData()' with a call to 'DateTime.Parse(string, IFormatProvider)'. If the result of 'DateTime.Parse(string, IFormatProvider)' will be based on input from the user, specify 'CultureInfo.CurrentCulture' as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="1265">Replace the call to 'string.operator ==(string, string)' in 'MainWindow.CheckRepairData()' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="1269">Replace the call to 'string.operator ==(string, string)' in 'MainWindow.CheckRepairData()' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="1284">Replace the call to 'string.operator ==(string, string)' in 'MainWindow.CheckRepairData()' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="1305">Replace the call to 'string.operator ==(string, string)' in 'MainWindow.CheckRepairData()' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="1318">Replace the call to 'string.operator ==(string, string)' in 'MainWindow.CheckRepairData()' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="1325">Replace the call to 'string.operator ==(string, string)' in 'MainWindow.CheckRepairData()' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#checkSum" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="checkSum" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'checkSum' in member name 'MainWindow.checkSum' exists as a discrete term. If your usage is intended to be single word, case it as 'checksum' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.checkSum' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#closeCheck()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="661">Replace the call to 'string.operator !=(string, string)' in 'MainWindow.closeCheck()' with a call to 'String.IsNullOrEmpty'.</Issue>
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="661">Replace the call to 'string.operator ==(string, string)' in 'MainWindow.closeCheck()' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataInput" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.DataInput' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#DataReasonClose" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.DataReasonClose' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dateTime" Kind="Field" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning">It appears that field 'MainWindow.dateTime' is never used or is only ever assigned to. Use this field or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dgr_AutoGeneratingColumn(System.Object,System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="656">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'MainWindow.dgr_AutoGeneratingColumn(object, DataGridAutoGeneratingColumnEventArgs)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EC_ERROR_CODE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.EC_ERROR_CODE' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#empName" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'emp' in member name 'MainWindow.empName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.empName' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#empNo" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'emp' in member name 'MainWindow.empNo' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.empNo' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#empPass" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'emp' in member name 'MainWindow.empPass' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.empPass' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExcelFile" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.ExcelFile' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#F_GROUP_NEXT" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.F_GROUP_NEXT' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fAddEC" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.fAddEC' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#funModify()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="fun" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'fun' in member name 'MainWindow.funModify()' by changing it to 'Fun'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetChecksum(REPAIR.MainWindow+HashingAlgoTypes,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="filename" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameterShouldBeCompoundWord" Certainty="80" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="381">In member 'MainWindow.GetChecksum(MainWindow.HashingAlgoTypes, string)', the discrete term 'filename' in parameter name 'filename' should be expressed as a compound word, 'fileName'.</Issue>
            </Message>
            <Message Id="Algo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="381">In method 'MainWindow.GetChecksum(MainWindow.HashingAlgoTypes, string)', correct the spelling of 'Algo' in parameter name 'hashingAlgoType' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="sss" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="387">'MainWindow.GetChecksum(MainWindow.HashingAlgoTypes, string)' declares a variable, 'sss', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLocalIPAddress()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="TooGeneric" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="279">'MainWindow.GetLocalIPAddress()' creates an exception of type 'Exception', an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Issue>
            </Message>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="270">Change 'MainWindow.GetLocalIPAddress()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getMacAddress()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="355">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindow.getMacAddress()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMacAddress()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="262">Modify 'MainWindow.GetMacAddress()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="236">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindow.GetMacAddress()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getRunningVersion()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="349">Modify 'MainWindow.getRunningVersion()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="344">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindow.getRunningVersion()' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#gridDataRepair_LoadingRow(System.Object,System.Windows.Controls.DataGridRowEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="bc" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="945">'MainWindow.gridDataRepair_LoadingRow(object, DataGridRowEventArgs)' declares a variable, 'bc', of type 'BrushConverter', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message Id="repairer" TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="950">'MainWindow.gridDataRepair_LoadingRow(object, DataGridRowEventArgs)' declares a variable, 'repairer', of type 'string', which is never used or is only assigned to. Use this variable or remove it.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="951">Replace the call to 'string.operator ==(string, string)' in 'MainWindow.gridDataRepair_LoadingRow(object, DataGridRowEventArgs)' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#iniLeadFree" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ini" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'ini' in member name 'MainWindow.iniLeadFree' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.iniLeadFree' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#inputLogin" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.inputLogin' non-public or a constant.</Issue>
            </Message>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'MainWindow.inputLogin' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IP" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.IP' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#itemCheckIn_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Controls.TextBlock.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="992">Method 'MainWindow.itemCheckIn_Click(object, RoutedEventArgs)' passes a literal string as parameter 'value' of a call to 'TextBlock.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CHECK IN".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#itemCheckOut_Click(System.Object,System.Windows.RoutedEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.Controls.TextBlock.set_Text(System.String)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="1001">Method 'MainWindow.itemCheckOut_Click(object, RoutedEventArgs)' passes a literal string as parameter 'value' of a call to 'TextBlock.Text.set(string)'. Retrieve the following string(s) from a resource table instead: "CHECK OUT".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#loadIniFile()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="119">In method 'MainWindow.loadIniFile()', call System.IDisposable.Dispose on object 'File.Create(MainWindow.strINIPath)' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="128">Modify 'MainWindow.loadIniFile()' to catch a more specific exception than 'Exception' or rethrow the exception.</Issue>
            </Message>
            <Message Id="load" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="112">Correct the casing of 'load' in member name 'MainWindow.loadIniFile()' by changing it to 'Load'.</Issue>
            </Message>
            <Message Id="Ini" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="112">Correct the spelling of 'Ini' in member name 'MainWindow.loadIniFile()' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Name="IsNullOrEmpty" Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="123">Replace the call to 'string.operator ==(string, string)' in 'MainWindow.loadIniFile()' with a call to 'String.IsNullOrEmpty'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Login()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="Login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'Login' in member name 'MainWindow.Login()' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#loginDB" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.loginDB' non-public or a constant.</Issue>
            </Message>
            <Message Id="login" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error">Replace the term 'login' in member name 'MainWindow.loginDB' with the preferred alternate 'LogOn'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#M_iIF_Repair" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MainWindow.M_iIF_Repair' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MACAddress" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.MACAddress' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Modify_Status" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.Modify_Status' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#oracle" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.oracle' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#prgName" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="prg" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'prg' in member name 'MainWindow.prgName' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.prgName' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ReasonCode" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.ReasonCode' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Repair_CNT" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MainWindow.Repair_CNT' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RepairStatus" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.RepairStatus' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RepairType" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.RepairType' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RESArray" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MainWindow.RESArray' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#rgrpAllErr" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="rgrp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'rgrp' in member name 'MainWindow.rgrpAllErr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.rgrpAllErr' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'MainWindow.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.sfcHttpClient' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#showError(System.String,System.String,System.Boolean)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="324">The 'this' parameter (or 'Me' in Visual Basic) of 'MainWindow.showError(string, string, bool)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#strINIPath" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'str' in member name 'MainWindow.strINIPath' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.strINIPath' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#strMACHINE" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="str" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'str' in member name 'MainWindow.strMACHINE' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.strMACHINE' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#strsql" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="strsql" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'strsql' in member name 'MainWindow.strsql' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Warning">Consider making 'MainWindow.strsql' non-public or a constant.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainWindow+HashingAlgoTypes" Kind="Enum" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Algo" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Algo' in type name 'MainWindow.HashingAlgoTypes'.</Issue>
          </Message>
          <Message TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Certainty="75" Level="Error">If the name 'MainWindow.HashingAlgoTypes' is plural, change it to its singular form.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#SHA1" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SHA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SHA' in member name 'MainWindow.HashingAlgoTypes.SHA1' by changing it to 'Sha'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SHA256" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SHA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SHA' in member name 'MainWindow.HashingAlgoTypes.SHA256' by changing it to 'Sha'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SHA384" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SHA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SHA' in member name 'MainWindow.HashingAlgoTypes.SHA384' by changing it to 'Sha'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SHA512" Kind="Field" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="SHA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'SHA' in member name 'MainWindow.HashingAlgoTypes.SHA512' by changing it to 'Sha'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MainWindow+Person" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Certainty="90" Level="Error">Do not nest type 'MainWindow.Person'. Alternatively, change its accessibility so that it is not externally visible.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#REPAIRER" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="REPAIRER" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MainWindow.xaml.cs" Line="1008">Correct the casing of 'REPAIRER' in member name 'MainWindow.Person.REPAIRER' by changing it to 'Repairer'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MessageError" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CustomFlag" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageError.CustomFlag' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="Flag" TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberNoAlternate" Certainty="95" Level="Error">Replace the term 'Flag' in member name 'MessageError.CustomFlag' with an appropriate alternate or remove it entirely.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#errorcode" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageError.errorcode' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="errorcode" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'errorcode' in member name 'MessageError.errorcode' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MessageEnglish" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageError.MessageEnglish' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MessageVietNam" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="VietNam" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error">The compound word 'VietNam' in member name 'MessageError.MessageVietNam' exists as a discrete term. If your usage is intended to be single word, case it as 'Vietnam' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageError.MessageVietNam' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#password_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.Windows.MessageBox.Show(System.String,System.String,System.Windows.MessageBoxButton,System.Windows.MessageBoxImage)" TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Name="KnownValue" Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MessageError.xaml.cs" Line="89">Method 'MessageError.password_KeyDown(object, KeyEventArgs)' passes a literal string as parameter 'caption' of a call to 'MessageBox.Show(string, string, MessageBoxButton, MessageBoxImage)'. Retrieve the following string(s) from a resource table instead: "Error".</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'MessageError.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'MessageError.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#txtPassword_keyup(System.Object,System.Windows.Input.KeyEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="MessageError.xaml.cs" Line="72">'MessageError.txtPassword_keyup(object, KeyEventArgs)' appears to have no upstream public or protected callers.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Oracle" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.ctor(Sfc.Library.HttpClient.SfcHttpClient)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\RepositoryService" File="Oracle.cs" Line="14">In method 'Oracle.Oracle(SfcHttpClient)', correct the spelling of 'sfc' in parameter name 'sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetList`1(System.String,System.Collections.Generic.IEnumerable`1&lt;Sfc.Core.Parameters.SfcParameter&gt;,Sfc.Core.Parameters.SfcCommandType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'Oracle.GetList&lt;T&gt;(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalError">Consider a design where 'Oracle.GetList&lt;T&gt;(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)' doesn't nest generic type 'Task&lt;List&lt;T&gt;&gt;'.</Issue>
            </Message>
            <Message Id="Sfc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Oracle.GetList&lt;T&gt;(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)', correct the casing of 'Sfc' in parameter name 'SfcParameters' by changing it to 'sfc'.</Issue>
            </Message>
            <Message Id="Sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Oracle.GetList&lt;T&gt;(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)', correct the spelling of 'Sfc' in parameter name 'SfcParameters' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetObj`1(System.String,System.Collections.Generic.IEnumerable`1&lt;Sfc.Core.Parameters.SfcParameter&gt;,Sfc.Core.Parameters.SfcCommandType)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error">Replace method 'Oracle.GetObj&lt;T&gt;(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)' with an overload that supplies all default arguments.</Issue>
            </Message>
            <Message Id="Sfc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'Oracle.GetObj&lt;T&gt;(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)', correct the casing of 'Sfc' in parameter name 'SfcParameters' by changing it to 'sfc'.</Issue>
            </Message>
            <Message Id="Sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'Oracle.GetObj&lt;T&gt;(string, IEnumerable&lt;SfcParameter&gt;, SfcCommandType)', correct the spelling of 'Sfc' in parameter name 'SfcParameters' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="RemoveKP" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#dgr_AutoGeneratingColumn(System.Object,System.Windows.Controls.DataGridAutoGeneratingColumnEventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="DependsOnFix">
             <Issue Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR" File="RemoveKP.xaml.cs" Line="113">Because the behavior of 'string.ToUpper()' could vary based on the current user's locale settings, replace this call in 'RemoveKP.dgr_AutoGeneratingColumn(object, DataGridAutoGeneratingColumnEventArgs)' with a call to 'string.ToUpper(CultureInfo)'. If the result of 'string.ToUpper(CultureInfo)' will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#EMP_NO" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RemoveKP.EMP_NO' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#excuteRemoveKP(System.String,System.String,System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="FUN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'RemoveKP.excuteRemoveKP(string, string, string, string)', correct the casing of 'FUN' in parameter name 'FUN' by changing it to 'fun'.</Issue>
            </Message>
            <Message Id="Keypart" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'RemoveKP.excuteRemoveKP(string, string, string, string)', correct the casing of 'Keypart' in parameter name 'KeypartNO' by changing it to 'keypart'.</Issue>
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'RemoveKP.excuteRemoveKP(string, string, string, string)', correct the casing of 'Keypart' in parameter name 'KeypartSN' by changing it to 'keypart'.</Issue>
            </Message>
            <Message Id="SN" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="85" Level="Error">In member 'RemoveKP.excuteRemoveKP(string, string, string, string)', correct the casing of 'SN' in parameter name 'SN' by changing it to 'sn'.</Issue>
            </Message>
            <Message Id="excute" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error">Correct the casing of 'excute' in member name 'RemoveKP.excuteRemoveKP(string, string, string, string)' by changing it to 'Excute'.</Issue>
            </Message>
            <Message Id="Keypart" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'RemoveKP.excuteRemoveKP(string, string, string, string)', correct the spelling of 'Keypart' in parameter name 'KeypartNO' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
             <Issue Name="MemberParameter" Certainty="75" Level="CriticalWarning">In method 'RemoveKP.excuteRemoveKP(string, string, string, string)', correct the spelling of 'Keypart' in parameter name 'KeypartSN' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message Id="excute" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'excute' in member name 'RemoveKP.excuteRemoveKP(string, string, string, string)' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MACIP" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RemoveKP.MACIP' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RESArray" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RemoveKP.RESArray' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sfcHttpClient" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RemoveKP.sfcHttpClient' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sfc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sfc' in member name 'RemoveKP.sfcHttpClient' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#sqlstr" Kind="Field" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="90" Level="Error">Because field 'RemoveKP.sqlstr' is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Issue>
            </Message>
            <Message Id="sqlstr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning">Correct the spelling of 'sqlstr' in member name 'RemoveKP.sqlstr' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="VersionModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ap_version" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="ap" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="VersionModel.cs" Line="11">Correct the casing of 'ap' in member name 'VersionModel.ap_version' by changing it to 'AP'.</Issue>
            </Message>
            <Message Id="version" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="VersionModel.cs" Line="11">Correct the casing of 'version' in member name 'VersionModel.ap_version' by changing it to 'Version'.</Issue>
            </Message>
            <Message Id="ap" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="VersionModel.cs" Line="11">Correct the spelling of 'ap' in member name 'VersionModel.ap_version' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="VersionModel.cs" Line="11">Remove the underscores from member name 'VersionModel.ap_version'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="REPAIR.Models">
       <Types>
        <Type Name="ALLPART_DATA" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="ALLPART" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'ALLPART' in type name 'ALLPART_DATA' by changing it to 'Allpart'.</Issue>
          </Message>
          <Message Id="DATA" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'DATA' in type name 'ALLPART_DATA' by changing it to 'Data'.</Issue>
          </Message>
          <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="95" Level="Error">Remove the underscores from type name 'ALLPART_DATA'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#DATE_CODE" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CODE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="39">Correct the casing of 'CODE' in member name 'ALLPART_DATA.DATE_CODE' by changing it to 'Code'.</Issue>
            </Message>
            <Message Id="DATE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="39">Correct the casing of 'DATE' in member name 'ALLPART_DATA.DATE_CODE' by changing it to 'Date'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="39">Remove the underscores from member name 'ALLPART_DATA.DATE_CODE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#KP_NO" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="35">Remove the underscores from member name 'ALLPART_DATA.KP_NO'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#LOT_CODE" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CODE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="41">Correct the casing of 'CODE' in member name 'ALLPART_DATA.LOT_CODE' by changing it to 'Code'.</Issue>
            </Message>
            <Message Id="LOT" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="41">Correct the casing of 'LOT' in member name 'ALLPART_DATA.LOT_CODE' by changing it to 'Lot'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="41">Remove the underscores from member name 'ALLPART_DATA.LOT_CODE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MESSAGE" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MESSAGE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="43">Correct the casing of 'MESSAGE' in member name 'ALLPART_DATA.MESSAGE' by changing it to 'Message'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MFR_KP_NO" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MFR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="36">Correct the casing of 'MFR' in member name 'ALLPART_DATA.MFR_KP_NO' by changing it to 'Mfr'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="36">Remove the underscores from member name 'ALLPART_DATA.MFR_KP_NO'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MFR_NAME" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MFR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="37">Correct the casing of 'MFR' in member name 'ALLPART_DATA.MFR_NAME' by changing it to 'Mfr'.</Issue>
            </Message>
            <Message Id="NAME" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="37">Correct the casing of 'NAME' in member name 'ALLPART_DATA.MFR_NAME' by changing it to 'Name'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="37">Remove the underscores from member name 'ALLPART_DATA.MFR_NAME'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#STATUS" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="STATUS" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="33">Correct the casing of 'STATUS' in member name 'ALLPART_DATA.STATUS' by changing it to 'Status'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TR_SN" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="42">Remove the underscores from member name 'ALLPART_DATA.TR_SN'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="EmpModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="Emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'Emp' in type name 'EmpModel'.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#emp_name" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="emp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="EmpModel.cs" Line="11">Correct the casing of 'emp' in member name 'EmpModel.emp_name' by changing it to 'Emp'.</Issue>
            </Message>
            <Message Id="name" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="EmpModel.cs" Line="11">Correct the casing of 'name' in member name 'EmpModel.emp_name' by changing it to 'Name'.</Issue>
            </Message>
            <Message Id="emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="EmpModel.cs" Line="11">Correct the spelling of 'emp' in member name 'EmpModel.emp_name' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="EmpModel.cs" Line="11">Remove the underscores from member name 'EmpModel.emp_name'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#emp_no" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="emp" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="EmpModel.cs" Line="12">Correct the casing of 'emp' in member name 'EmpModel.emp_no' by changing it to 'Emp'.</Issue>
            </Message>
            <Message Id="no" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="EmpModel.cs" Line="12">Correct the casing of 'no' in member name 'EmpModel.emp_no' by changing it to 'No'.</Issue>
            </Message>
            <Message Id="emp" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="75" Level="CriticalWarning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="EmpModel.cs" Line="12">Correct the spelling of 'emp' in member name 'EmpModel.emp_no' or remove it entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="EmpModel.cs" Line="12">Remove the underscores from member name 'EmpModel.emp_no'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="format" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'format' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="IdleTimeDetector" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetIdleTimeInfo()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="50" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="IdleTimeDetector.cs" Line="16">Change 'IdleTimeDetector.GetIdleTimeInfo()' to a property if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetLastInputInfo(REPAIR.Models.LASTINPUTINFO&amp;)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Return" Certainty="95" Level="Warning">Add the MarshalAsAttribute to the return type of P/Invoke 'IdleTimeDetector.GetLastInputInfo(ref LASTINPUTINFO)'. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Issue>
            </Message>
            <Message TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="95" Level="CriticalWarning">Because it is a P/Invoke method, 'IdleTimeDetector.GetLastInputInfo(ref LASTINPUTINFO)' should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ListError" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ERROR_CODE" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CODE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="18">Correct the casing of 'CODE' in member name 'ListError.ERROR_CODE' by changing it to 'Code'.</Issue>
            </Message>
            <Message Id="ERROR" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="18">Correct the casing of 'ERROR' in member name 'ListError.ERROR_CODE' by changing it to 'Error'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="18">Remove the underscores from member name 'ListError.ERROR_CODE'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="listModelName" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="list" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'list' in type name 'listModelName' by changing it to 'List'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ListReasonCode" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DUTY_STATION" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DUTY" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="28">Correct the casing of 'DUTY' in member name 'ListReasonCode.DUTY_STATION' by changing it to 'Duty'.</Issue>
            </Message>
            <Message Id="STATION" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="28">Correct the casing of 'STATION' in member name 'ListReasonCode.DUTY_STATION' by changing it to 'Station'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="28">Remove the underscores from member name 'ListReasonCode.DUTY_STATION'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#REASON_CODE" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="CODE" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="24">Correct the casing of 'CODE' in member name 'ListReasonCode.REASON_CODE' by changing it to 'Code'.</Issue>
            </Message>
            <Message Id="REASON" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="24">Correct the casing of 'REASON' in member name 'ListReasonCode.REASON_CODE' by changing it to 'Reason'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="24">Remove the underscores from member name 'ListReasonCode.REASON_CODE'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#REASON_DESC" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DESC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="26">Correct the casing of 'DESC' in member name 'ListReasonCode.REASON_DESC' by changing it to 'Desc'.</Issue>
            </Message>
            <Message Id="REASON" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="26">Correct the casing of 'REASON' in member name 'ListReasonCode.REASON_DESC' by changing it to 'Reason'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="26">Remove the underscores from member name 'ListReasonCode.REASON_DESC'.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#REASON_DESC2" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="DESC" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="27">Correct the casing of 'DESC' in member name 'ListReasonCode.REASON_DESC2' by changing it to 'Desc'.</Issue>
            </Message>
            <Message Id="REASON" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="85" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="27">Correct the casing of 'REASON' in member name 'ListReasonCode.REASON_DESC2' by changing it to 'Reason'.</Issue>
            </Message>
            <Message TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="Member" Certainty="95" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\Models" File="format.cs" Line="27">Remove the underscores from member name 'ListReasonCode.REASON_DESC2'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="sqlStr" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'sqlStr' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="REPAIR.UserControlRepair">
       <Types>
        <Type Name="ucBar" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="uc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'uc' in type name 'ucBar' by changing it to 'UC'.</Issue>
          </Message>
          <Message Id="uc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'uc' in type name 'ucBar'.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ucRange" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message Id="uc" TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="85" Level="Error">Correct the casing of 'uc' in type name 'ucRange' by changing it to 'UC'.</Issue>
          </Message>
          <Message Id="uc" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
           <Issue Name="Type" Certainty="75" Level="CriticalWarning">Correct the spelling of 'uc' in type name 'ucRange'.</Issue>
          </Message>
         </Messages>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="REPAIR.ViewModel">
       <Types>
        <Type Name="BaseViewModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#OnPropertyChanged(System.String)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Certainty="75" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\ViewModel" File="BaseViewModel.cs" Line="17">Replace method 'BaseViewModel.OnPropertyChanged(string)' with an overload that supplies all default arguments.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="ControlBarViewModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetWindowParent(System.Windows.Controls.UserControl)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Warning" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\ViewModel" File="ControlBarViewModel.cs" Line="74">The 'this' parameter (or 'Me' in Visual Basic) of 'ControlBarViewModel.GetWindowParent(UserControl)' is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MaxiMizeWindowCommand" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MaxiMize" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\ViewModel" File="ControlBarViewModel.cs" Line="18">The compound word 'MaxiMize' in member name 'ControlBarViewModel.MaxiMizeWindowCommand' exists as a discrete term. If your usage is intended to be single word, case it as 'Maximize' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#MiniMizeWindowCommand" Kind="Property" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message Id="MiniMize" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="Breaking">
             <Issue Name="MemberShouldBeDiscreteTerm" Certainty="80" Level="Error" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\ViewModel" File="ControlBarViewModel.cs" Line="17">The compound word 'MiniMize' in member name 'ControlBarViewModel.MiniMizeWindowCommand' exists as a discrete term. If your usage is intended to be single word, case it as 'Minimize' or strip the first token entirely if it represents any sort of Hungarian notation.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="dataQuery" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'dataQuery' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="DialogResult" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'DialogResult' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="querySingleParameterModel" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Messages>
          <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
           <Issue Certainty="75" Level="Warning">'querySingleParameterModel' is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="RelayCommand`1" Kind="Class" Accessibility="Assembly" ExternallyVisible="False">
         <Members>
          <Member Name="#CanExecute(System.Object)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="False">
           <Messages>
            <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Status="Active" Created="2024-11-05 02:24:00Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="CriticalError" Path="E:\5.0\NIC_SFC\PD\Repair\REPAIR\ViewModel" File="BaseViewModel.cs" Line="40">Modify 'RelayCommand&lt;T&gt;.CanExecute(object)' to catch a more specific exception than 'object' or rethrow the exception.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="AssembliesShouldHaveValidStrongNames" Category="Microsoft.Design" CheckId="CA2210">
   <Name>Assemblies should have valid strong names</Name>
   <Description>Either the assembly has no strong name, an invalid one, or the strong name is valid only because of the computer configuration. The assembly should not be deployed in this state. The most common causes of this are: 1) The assembly's contents were modified after it was signed. 2) The signing process failed. 3) The assembly was delay-signed. 4) A registry key existed that allowed the check to pass (where it would not have otherwise).</Description>
   <Resolution Name="NoStrongName">Sign {0} with a strong name key.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182127.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveClassCoupling" Category="Microsoft.Maintainability" CheckId="CA1506">
   <Name>Avoid excessive class coupling</Name>
   <Description>Types and methods with a high degree of class coupling can be difficult to maintain.</Description>
   <Resolution Name="Type">{0} is coupled with {1} different types from {2} different namespaces. Rewrite or refactor this class's methods to decrease its class coupling, or consider moving some of the class's methods to some of the other types it is tightly coupled with. A class coupling above {3} indicates poor maintainability, a class coupling between {3} and {4} indicates moderate maintainability, and a class coupling below {4} indicates good maintainability.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb397994.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidExcessiveComplexity" Category="Microsoft.Maintainability" CheckId="CA1502">
   <Name>Avoid excessive complexity</Name>
   <Description>Method implementations that are exceedingly complex increase the challenge of understanding and maintaining code.</Description>
   <Resolution Name="Default">{0} has a cyclomatic complexity of {1}. Rewrite or refactor the method to reduce complexity to {2}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182212.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
   <Name>Avoid uncalled private code</Name>
   <Description>There is uncalled code that is not externally visible and is not a known runtime entry point. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182264.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
   <Name>Avoid uninstantiated internal classes</Name>
   <Description>An internal class was detected that is apparently never instantiated. This rule does not attempt to detect late-bound creation and will generate false positives if instances of a type are only created in this way (for example, by means of Activator.CreateInstance or by passing the type as an argument to a TypeConverter constructor).</Description>
   <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182265.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="AvoidUnusedPrivateFields" Category="Microsoft.Performance" CheckId="CA1823">
   <Name>Avoid unused private fields</Name>
   <Description>Private fields were detected that do not appear to be accessed within the assembly. If this violation fires in error, please send a problem report to the Visual Studio Code Analysis team.</Description>
   <Resolution Name="Default">It appears that field {0} is never used or is only ever assigned to. Use this field or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245042.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
   <Name>Compound words should be cased correctly</Name>
   <Description>Avoid creating compound words from terms which exist in the dictionary as discrete terms. Do not create a compound word such as 'StopWatch' or 'PopUp'. These terms are recognized in the dictionary and should be cased as 'Stopwatch' and 'Popup'.</Description>
   <Resolution Name="MemberParameterShouldBeCompoundWord">In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'.</Resolution>
   <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
   <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264474.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="80">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DefaultParametersShouldNotBeUsed" Category="Microsoft.Design" CheckId="CA1026">
   <Name>Default parameters should not be used</Name>
   <Description>Some programming languages do not support default parameters. Replace default parameters with method overloads that supply the default argument.</Description>
   <Resolution Name="Default">Replace method {0} with an overload that supplies all default arguments.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182135.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Do not pass literals as localized parameters" Category="Microsoft.Globalization" CheckId="CA1303">
   <Name>Do not pass literals as localized parameters</Name>
   <Description>Literal strings that are embedded in source code are difficult to localize. Avoid passing literal strings as arguments in circumstances where a localized string is generally expected.</Description>
   <Resolution Name="KnownValue">Method {0} passes a literal string as parameter '{1}' of a call to {2}. Retrieve the following string(s) from a resource table instead: {3}.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182187.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
   <Name>Do not catch general exception types</Name>
   <Description>You should not catch Exception or SystemException. Catching generic exception types can hide run-time problems from the library user, and can complicate debugging. You should catch only those exceptions that you can handle gracefully.</Description>
   <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182137.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareReadOnlyMutableReferenceTypes" Category="Microsoft.Security" CheckId="CA2104">
   <Name>Do not declare read only mutable reference types</Name>
   <Description>A read-only declaration for a mutable reference type does not prevent the field's instance data from being modified. For example, a read-only StringBuilder field declaration does not make sense, since the data encapsulated by the StringBuilder can be modified using the read-only reference.</Description>
   <Resolution Name="Default">Remove the read-only designation from {0} or change the field to one that is an immutable reference type. If the reference type {1} is, in fact, immutable, exclude this message.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182302.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="25">Error</MessageLevel>
   <File Name="securityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotDeclareVisibleInstanceFields" Category="Microsoft.Design" CheckId="CA1051">
   <Name>Do not declare visible instance fields</Name>
   <Description>Instance fields that are visible outside of the type that declares them, limit your ability to change the implementation details for those data items. Use properties instead. They do not compromise usability or performance and they do provide flexibility in that they conceal the implementation details of the underlying data.</Description>
   <Resolution Name="Default">Because field {0} is visible outside of its declaring type, change its accessibility to private and add a property, with the same accessibility as the field has currently, to provide access to it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182141.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotNestGenericTypesInMemberSignatures" Category="Microsoft.Design" CheckId="CA1006">
   <Name>Do not nest generic types in member signatures</Name>
   <Description>Avoid API that require users to instantiate a generic type with another generic type as type argument. The syntax gets too complex.</Description>
   <Resolution Name="Default">Consider a design where {0} doesn't nest generic type {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182144.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
   <Name>Do not raise reserved exception types</Name>
   <Description>User code should not create and raise exceptions of certain types that are reserved by the runtime or which are of a too general exception type. Exception types that are too general include Exception, SystemException, and ApplicationException. Exception types that are reserved by the runtime include ThreadAbortException, OutOfMemoryException, ExecutionEngineException, and IndexOutOfRangeException.</Description>
   <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182338.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1709">
   <Name>Identifiers should be cased correctly</Name>
   <Description>Type, namespace, and member identifiers are Pascal-cased. Parameter identifiers are camel-cased. Two letter acronyms within these identifiers should be upper-cased, for example, use System.IO instead of System.Io. Acronyms of three or more letters should be Pascal-cased, for example, use System.Xml instead of System.XML. The pascal-casing convention capitalizes the first letter of each word, as in BackColor. The camel-casing convention formats the first letter of the first word in lowercase and capitalizes the first letter of all subsequent words, as in backgroundColor. Although it may be common practice for some two letter acronyms to not be fully capitalized, violations of this rule should not be excluded for this reason. For example, 'DbConnection', is common but incorrect; use DBConnection. A violation of this rule might be required for compatibility with existing, non-managed symbol schemes. In general, however, these symbols should not be visible outside the assembly that uses them.</Description>
   <Resolution Name="Assembly">Correct the casing of '{0}' in assembly name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="Member">Correct the casing of '{0}' in member name {1} by changing it to '{2}'.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, correct the casing of '{1}' in parameter name {2} by changing it to '{3}'.</Resolution>
   <Resolution Name="Namespace">Correct the casing of '{0}' in namespace name '{1}' by changing it to '{2}'.</Resolution>
   <Resolution Name="Type">Correct the casing of '{0}' in type name {1} by changing it to '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182240.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="85">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
   <Name>Identifiers should be spelled correctly</Name>
   <Description>The individual words that make up an identifier should not be abbreviated and should be spelled correctly. If this rule generates a false positive on a term that should be recognized, add the word to the FxCop custom dictionary.</Description>
   <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
   <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264492.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">CriticalWarning</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
   <Name>Identifiers should not contain type names</Name>
   <Description>Avoid using language-specific types name in parameters and members and data type identifiers in parameters. Types names might not be intuitive for all developers. It is recommended that you select a generic name, such as 'value', instead. If this is not sufficient, be sure to use the type name as it is defined in the .NET Framework Library and avoid language-specific type names completely. Some examples of C#-specific type names are 'float' (use 'Single' if a generic name is not sufficient), and 'ulong' (use 'UInt64' if a generic name is not sufficient).</Description>
   <Resolution Name="LanguageSpecificMember">Consider replacing the language-specific data type identifier '{0}' in member name {1} with either a language-independent equivalent or a more generic term, such as 'value'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb531486.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="IdentifiersShouldNotContainUnderscores" Category="Microsoft.Naming" CheckId="CA1707">
   <Name>Identifiers should not contain underscores</Name>
   <Description>Do not use underscores when specifying identifiers. Some generated Visual Studio identifiers for applications contain underscore characters. Underscore characters should generally be avoided in public identifiers.</Description>
   <Resolution Name="Member">Remove the underscores from member name {0}.</Resolution>
   <Resolution Name="MemberParameter">In member {0}, remove the underscores from parameter name {1}.</Resolution>
   <Resolution Name="Type">Remove the underscores from type name {0}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182245.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
   <Name>Mark assemblies with CLSCompliantAttribute</Name>
   <Description>Assemblies should explicitly state their CLS compliance using the CLSCompliant attribute. An assembly without this attribute is not CLS-compliant. Assemblies, modules, and types can be CLS-compliant even if some parts of the assembly, module, or type are not CLS-compliant. The following rules apply: 1) If the element is marked CLSCompliant, any noncompliant members must have the CLSCompliant attribute present with its argument set to false. 2) A comparable CLS-compliant alternative member must be supplied for each member that is not CLS-compliant.</Description>
   <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182156.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkAssembliesWithNeutralResourcesLanguage" Category="Microsoft.Performance" CheckId="CA1824">
   <Name>Mark assemblies with NeutralResourcesLanguageAttribute</Name>
   <Description>The NeutralResourcesLanguage attribute informs the ResourceManager of the language used to render the neutral culture's resources for an assembly. When looking up resources in the same culture as the neutral resources language, the ResourceManager automatically uses the resources located in the main assembly, instead of searching for a satellite assembly with the current user interface culture for the current thread. This will improve lookup performance for the first resource you load and can reduce your working set.</Description>
   <Resolution Name="Default">Because assembly {0} contains a ResX-based resource file, mark it with the NeutralResourcesLanguage attribute, specifying the language of the resources within the assembly. This could improve lookup performance the first time a resource is retrieved.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb385967.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkBooleanPInvokeArgumentsWithMarshalAs" Category="Microsoft.Interoperability" CheckId="CA1414">
   <Name>Mark boolean P/Invoke arguments with MarshalAs</Name>
   <Description>All boolean P/Invoke parameters and return types should be explicitly marked with the MarshalAs attribute. By default, the system will marshal all booleans as 4-byte UnmanagedType.Bool. This is the correct behavior for Win32 'BOOL' arguments but incorrect for C++ 'bool' arguments, which should be marshaled as 1-byte UnmanagedType.U1. For code maintainability reasons, always explicitly specify the marshaling information for boolean arguments and return values.</Description>
   <Resolution Name="Return">Add the MarshalAsAttribute to the return type of P/Invoke {0}. If the corresponding unmanaged return type is a 4-byte Win32 'BOOL', use MarshalAs(UnmanagedType.Bool). For a 1-byte C++ 'bool', use MarshalAs(UnmanagedType.U1).</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182206.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="interoperabilityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
   <Name>Mark members as static</Name>
   <Description>Methods which do not access instance data or call instance methods can be marked as static (Shared in Visual Basic). After doing so, the compiler will emit non-virtual call sites to these members which will prevent a check at runtime for each call that ensures the current object pointer is non-null. This can result in a measurable performance gain for performance-sensitive code. In some cases, the failure to access the current object instance represents a correctness issue.</Description>
   <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms245046.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="MovePInvokesToNativeMethodsClass" Category="Microsoft.Design" CheckId="CA1060">
   <Name>Move P/Invokes to NativeMethods class</Name>
   <Description>This type contains members with the DllImport attribute. Members with the DllImport attribute should be contained in classes named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Description>
   <Resolution Name="Default">Because it is a P/Invoke method, {0} should be defined in a class named NativeMethods, SafeNativeMethods, or UnsafeNativeMethods.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182161.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalWarning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="NestedTypesShouldNotBeVisible" Category="Microsoft.Design" CheckId="CA1034">
   <Name>Nested types should not be visible</Name>
   <Description>Do not use public, protected or protected internal (Protected Friend) nested types as a way of grouping types. Use namespaces for this purpose. There are very limited scenarios where nested types are the best design. Also, nested type member accessibility is not clearly understood by all audiences. Enumerators are exempt from this rule.</Description>
   <Resolution Name="Default">Do not nest type {0}. Alternatively, change its accessibility so that it is not externally visible.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182162.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Error</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="NonConstantFieldsShouldNotBeVisible" Category="Microsoft.Usage" CheckId="CA2211">
   <Name>Non-constant fields should not be visible</Name>
   <Description>Static fields should be constant unless you carefully manage access to the field using locks. Using static variables without making them thread safe can compromise execution state. This rule applies to managed code libraries. If the analyzed assembly is an application, it is usually safe to exclude violations of this rule.</Description>
   <Resolution Name="Default">Consider making {0} non-public or a constant.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182353.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="90">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="OnlyFlagsEnumsShouldHavePluralNames" Category="Microsoft.Naming" CheckId="CA1717">
   <Name>Only FlagsAttribute enums should have plural names</Name>
   <Description>Plural names indicate that the values of the enumeration can be combined. For example, an enumeration named 'Day' indicates a single day, and an enumeration named 'Days' indicates multiple days. Enumeration values should be combined using the bit-wise OR operator only if the Flags attribute is present on the enumeration.</Description>
   <Resolution Name="Default">If the name {0} is plural, change it to its singular form.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/bb264487.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="PInvokeDeclarationsShouldBePortable" Category="Microsoft.Portability" CheckId="CA1901">
   <Name>P/Invoke declarations should be portable</Name>
   <Description>.</Description>
   <Resolution Name="Return">As it is declared in your code, the return type of P/Invoke {0} will be {1} bytes wide on {2} platforms. This is not correct, as the actual native declaration of this API indicates it should be {3} bytes wide on {2} platforms. Consult the MSDN Platform SDK documentation for help determining what data type should be used instead of {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182284(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="portabilityrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="RemoveUnusedLocals" Category="Microsoft.Performance" CheckId="CA1804">
   <Name>Remove unused locals</Name>
   <Description>Remove locals that are not used or are only assigned to in method implementations.</Description>
   <Resolution Name="Default">{0} declares a variable, {1}, of type {2}, which is never used or is only assigned to. Use this variable or remove it.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182278.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>Rethrow to preserve stack details</Name>
   <Description>Use the IL rethrow instruction to preserve original stack details when re-raising a caught exception.</Description>
   <Resolution Name="Default">{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
   <Name>Specify CultureInfo</Name>
   <Description>If an overload exists that takes a CultureInfo argument, it should always be called in favor of an overload that does not. The CultureInfo type contains culture-specific information required for performing numeric and string operations, such as casing, formatting, and string comparisons. In scenarios where conversion and parsing behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182189.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
   <Name>Specify IFormatProvider</Name>
   <Description>If an overload exists that takes an IFormatProvider argument, it should always be called in favor of an overload that does not. Some methods in the runtime convert a value to or from a string representation and take a string parameter that contains one or more characters, called format specifiers, which indicate how the value is to be converted. If the meaning of the format specifier varies by culture, a formatting object supplies the actual characters used in the string representation. In scenarios where sorting and comparison behavior should never change between cultures, specify CultureInfo.InvariantCulture, otherwise, specify CultureInfo.CurrentCulture.</Description>
   <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
   <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182190.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="SpecifyMarshalingForPInvokeStringArguments" Category="Microsoft.Globalization" CheckId="CA2101">
   <Name>Specify marshaling for P/Invoke string arguments</Name>
   <Description>When marshaling strings as ANSI (or as Auto on Win9x), some characters may be changed. If best-fit mapping is on, strings that appear different in Unicode will be marshaled to identical ANSI strings, which may lead to incorrect security decisions. Turning best-fit mapping off reduces this risk, as all characters without equivalents are mapped to '?'. Also, note that CharSet.Ansi is the default setting for all string marshaling; Unicode marshaling must be specified explicitly, either as a CharSet setting of DllImport or StructLayout, or as a MarshalAs attribute with a Unicode (or system-dependent) UnmanagedType.</Description>
   <Resolution Name="ParameterImplicitAnsi">To reduce security risk, marshal parameter {0} as Unicode, by setting DllImport.CharSet to CharSet.Unicode, or by explicitly marshaling the parameter as UnmanagedType.LPWStr. If you need to marshal this string as ANSI or system-dependent, specify MarshalAs explicitly, and set BestFitMapping=false; for added security, also set ThrowOnUnmappableChar=true.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182319.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Error</MessageLevel>
   <File Name="globalizationrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="TestForEmptyStringsUsingStringLength" Category="Microsoft.Performance" CheckId="CA1820">
   <Name>Test for empty strings using string length</Name>
   <Description>To test for empty strings, check if String.Length is equal to zero. Constructs such as "".Equals(someString) and String.Empty.Equals(someString) are less efficient than testing the string length. Replace these with checks for someString.Length == 0.</Description>
   <Resolution Name="IsNullOrEmpty">Replace the call to {0} in {1} with a call to 'String.IsNullOrEmpty'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182279.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Warning</MessageLevel>
   <File Name="performancerules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UsePreferredTerms" Category="Microsoft.Naming" CheckId="CA1726">
   <Name>Use preferred terms</Name>
   <Description>Use preferred terms over deprecated alternates.</Description>
   <Resolution Name="Member">Replace the term '{0}' in member name {1} with the preferred alternate '{2}'.</Resolution>
   <Resolution Name="MemberNoAlternate">Replace the term '{0}' in member name {1} with an appropriate alternate or remove it entirely.</Resolution>
   <Resolution Name="Type">Replace the term '{0}' in type name {1} with the preferred alternate '{2}'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182258.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="namingrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="UsePropertiesWhereAppropriate" Category="Microsoft.Design" CheckId="CA1024">
   <Name>Use properties where appropriate</Name>
   <Description>Properties should be used instead of Get/Set methods in most situations. Methods are preferable to properties in the following situations: the operation is a conversion, is expensive or has an observable side-effect; the order of execution is important; calling the member twice in succession creates different results; a member is static but returns a mutable value; or the member returns an array.</Description>
   <Resolution Name="Default">Change {0} to a property if appropriate.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182181.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="designrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="Validate arguments of public methods" Category="Microsoft.Design" CheckId="CA1062">
   <Name>Validate arguments of public methods</Name>
   <Description>All reference arguments passed to externally visible methods should be checked against null (Nothing in VB). If appropriate, throw a System.ArgumentNullException when the argument is null.</Description>
   <Resolution Name="Default">In externally visible method {0}, validate parameter '{1}' before using it.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182182.aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="16.0.0.0" />
  </Rule>
  <Rule TypeName="VariableNamesShouldNotMatchFieldNames" Category="Microsoft.Maintainability" CheckId="CA1500">
   <Name>Variable names should not match field names</Name>
   <Description>Instance field and variable names should not be identical within the same scope.</Description>
   <Resolution Name="Parameter">{0}, a parameter declared in {1}, has the same name as an instance field on the type. Change the name of one of these items.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182216.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="maintainabilityrules.dll" Version="16.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
